{"version":3,"file":"static/js/1140.4e36bdc2.chunk.js","mappings":"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","sources":["app/service/action/public/event/eventAction.js","components/Loading/Loading.jsx","components/Title/TitleComponent.jsx","components/event/BannerEvent.jsx","features/member-page/home/component/EventActive.jsx","features/member-page/home/component/OtherEvent.jsx","features/member-page/home/index.jsx","pages/member/Home.jsx","utils/DateUtils.js"],"sourcesContent":["/*\n * Copyright (c) 2023-2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {apiBaseUrl} from \"../../../apiBaseUrl\";\nimport {getError, getResponseError} from '../../../helper/handlingError';\nimport {\n    REQUEST_DETAIL_EVENT,\n    REQUEST_DETAIL_EVENT_FAILURE,\n    REQUEST_DETAIL_EVENT_SUCCESS,\n    REQUEST_EVENT_ACTIVE,\n    REQUEST_EVENT_ACTIVE_FAILED,\n    REQUEST_EVENT_ACTIVE_SUCCESS,\n    REQUEST_GET_EVENT_LIST,\n    REQUEST_GET_EVENT_LIST_FAILURE,\n    REQUEST_GET_EVENT_LIST_SUCCESS,\n    REQUEST_REGISTRATION_EVENT,\n    REQUEST_REGISTRATION_EVENT_FAILURE,\n    REQUEST_REGISTRATION_EVENT_SUCCESS\n} from \"../../../constant/EventConstant\";\n\nexport const fetchAllEventAction = (requestParam) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_GET_EVENT_LIST,\n        });\n        try {\n            const {data, status} = await apiBaseUrl({\n                method: 'GET',\n                params: {\n                    status: requestParam.status,\n                    categoryEventId: requestParam.categoryEventId,\n                    page: requestParam.page,\n                    size: requestParam.size,\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: {},\n                url: `/public/api/v2/event`,\n            });\n\n            if (data.result == null) {\n                dispatch({\n                    type: REQUEST_GET_EVENT_LIST_FAILURE,\n                });\n                return getResponseError(data.responseData.message);\n            }\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_GET_EVENT_LIST_SUCCESS,\n                    payload: data,\n                });\n                return data.result;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_GET_EVENT_LIST_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n};\n\nexport const fetchDetailEventAction = (id: number) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_DETAIL_EVENT,\n        });\n        try {\n            const { data, status } = await apiBaseUrl({\n                method: 'GET',\n                params: {},\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: {},\n                url: `/public/api/v2/event/${id}`,\n            });\n\n            if (data.result == null) {\n                dispatch({\n                    type: REQUEST_DETAIL_EVENT_FAILURE,\n                });\n                return getResponseError(data.responseData.message);\n            }\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_DETAIL_EVENT_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_DETAIL_EVENT_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n};\n\n\nexport const fetchEventActive = (page: number) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_EVENT_ACTIVE,\n        });\n        try {\n            const { data, status } = await apiBaseUrl({\n                method: 'GET',\n                params: {\n                    page,\n                    size: 1\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                url: '/public/api/v2/event/active',\n                data: {}\n            });\n\n            if (data.responseData.code === 204) {\n                dispatch({\n                    type: REQUEST_EVENT_ACTIVE_SUCCESS,\n                    payload: data.responseData.code,\n                });\n                return [];\n            }\n\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_EVENT_ACTIVE_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_EVENT_ACTIVE_FAILED,\n            });\n            await getError(error);\n        }\n    };\n};\nexport const fetchRegistrationEvent = (requestParam) => {\n        return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_REGISTRATION_EVENT,\n        });\n        try {\n            const formData = new FormData();\n            formData.append('email', requestParam.email);\n            formData.append('riderName', requestParam.riderName);\n            formData.append('nickname', requestParam.nickname);\n            formData.append('noStart', requestParam.noStart);\n            formData.append('parentName', requestParam.parentName);\n            formData.append('noTelp', requestParam.noTelp);\n            formData.append('masterCategoryRaceId', requestParam.masterCategoryRaceId);\n            formData.append('eventId', requestParam.eventId);\n            formData.append('community', requestParam.community);\n            formData.append('dob', requestParam.dob);\n            formData.append('filePayment', requestParam.filePayment);\n\n            const { data, status } = await apiBaseUrl({\n                method: 'POST',\n                data: formData,\n                headers: {\n                    'Content-Type': 'application/form-data',\n                },\n                url: `/public/api/v2/event/registration/add`,\n            });\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_REGISTRATION_EVENT_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_REGISTRATION_EVENT_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n}\n// export const fetchGetEventListAction = (requestParam: any) => {\n//     return async (dispatch: any) => {\n//         dispatch({\n//             type: REQUEST_GET_EVENT_LIST,\n//         });\n//         try {\n//             const token = validationSession.getToken();\n//             const { data, status } = await apiBaseUrl({\n//                 method: 'GET',\n//                 params: {\n//                     size: requestParam.size,\n//                     page: requestParam.page,\n//                     status: requestParam.status,\n//                     category_event_id: requestParam.category_event_id,\n//                     search: requestParam.search,\n//                 },\n//                 headers: {\n//                     'Content-type': 'application/json',\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//                 url: `/api/v2/event`,\n//                 data: requestParam\n//             });\n//             if (status === 200) {\n//                 dispatch({\n//                     type: REQUEST_GET_EVENT_LIST_SUCCESS,\n//                     payload: data,\n//                 });\n//                 return data;\n//             }\n//         } catch (error) {\n//             dispatch({\n//                 type: REQUEST_GET_EVENT_LIST_FAILED,\n//             });\n//             await getError(error);\n//         }\n//     };\n// }\n","/*\n * Copyright (c) 2023. Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport React from \"react\";\nimport loadingText from \"../../assets/image/loading.gif\";\nimport './Loading.css'\n\nconst Loading = () => {\n    return (\n        <div id={'loading'}>\n            <img src={loadingText} alt=\"loading\" width={100} />\n        </div>\n    )\n}\n\nexport default Loading;\n","/*\n * Copyright (c) 2023-2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport React from \"react\";\n\nconst TitleComponent = ({ title }) => {\n  return (\n    <>\n      <div className={'title-page'}>{title}</div>\n    </>\n  )\n}\n\nexport default TitleComponent;\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {useNavigate} from \"react-router-dom\";\nimport checkAuth from \"../../app/auth\";\nimport {convertLongDateToIndo} from \"../../utils/DateUtils\";\nimport noImage from \"../../assets/image/No-Image-Placeholder.svg.webp\"\n\nconst BannerEvent = ({id, image, name, date, price}) => {\n    const navigate = useNavigate();\n    const token = checkAuth()\n    const userDetail = JSON.parse(localStorage.getItem('userDetail'));\n\n    function handleClick(id) {\n        if (token && userDetail) {\n            if (userDetail.scope === \"Administrator\") {\n                navigate(`/app/event/${id}`)\n            } else if (userDetail.scope === \"Member\") {\n                navigate(`/member/event/${id}`)\n            }\n        } else {\n            navigate(`/event/${id}`)\n        }\n    }\n\n    return (\n        <div className={'event-banner'} key={id}>\n            <div className={'event-banner-image'}>\n                {image ? (\n                    <img src={image} alt=\"banner\"/>\n                ) : (\n                    <img src={noImage} alt=\"\"/>\n                )}\n            </div>\n            <div className={'event-banner-note'}>\n                <div>\n                    <div className={'event-title'}>{name}</div>\n                    <div className={'event-date'}>{convertLongDateToIndo(date)}</div>\n                </div>\n                {/*<div className={'event-fee'}>Registration <span*/}\n                {/*    className={'fee'}>{price ? formatRupiah(price) : 'FREE'}</span></div>*/}\n                <div className={'event-button'}>\n                    <button onClick={() => handleClick(id)}>\n                        Detail Information\n                    </button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default BannerEvent;\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport React, { useEffect, useState } from \"react\";\nimport {fetchEventActive} from \"../../../../app/service/action/public/event/eventAction\";\nimport Loading from \"../../../../components/Loading/Loading\";\nimport BannerEvent from \"../../../../components/event/BannerEvent\";\nimport {Pagination} from \"@mui/material\";\n\nexport const EventActive = () => {\n    const dispatch = useDispatch();\n    const { data, isLoading } = useSelector(\n        ({ eventActiveState }) => eventActiveState.eventActive\n    );\n    const [page, setPage] = useState(1);\n    useEffect(() => {\n        // @ts-ignore\n        dispatch(fetchEventActive(page));\n    }, [dispatch, page]);\n\n    const handleChange = (event, value) => {\n        setPage(value);\n        // @ts-ignore\n        dispatch(fetchEventActive(value));\n    };\n    return (\n        <div className={\"active-event\"}>\n            {isLoading ? (\n                <Loading />\n            ) : (\n                <>\n                    <h2 className={\"title\"}>Event</h2>\n                    <hr />\n                    {data.result ? (\n                        data.result.map((item) => {\n                            return (\n                                <div className={\"content\"} key={item.id}>\n                                    <BannerEvent\n                                        id={item.id}\n                                        image={item.image}\n                                        name={item.name}\n                                        date={item.date}\n                                        price={item.price}\n                                    />\n                                </div>\n                            );\n                        })\n                    ) : (\n                        <div>Tidak ada event aktif</div>\n                    )}\n                    <div className={\"event-pagination\"}>\n                        <Pagination\n                            count={data.result ? data.metaData.totalPage : 0}\n                            page={page}\n                            color={\"primary\"}\n                            onChange={handleChange}\n                        />\n                    </div>\n                </>\n            )}\n        </div>\n    );\n};\n","/*\n * Copyright (c) 2023. Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport comingSoon from '../../../../assets/image/coming-soon.png'\n\nexport const OtherEvent = () => {\n\n    return (\n        <div className=\"other-event\">\n            <div className=\"content\">\n                <div>\n                    <h2>Event Lainnya</h2>\n                </div>\n                <div>\n                    <img src={comingSoon} alt=\"\" width={250}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport TitleComponent from \"../../../components/Title/TitleComponent\";\nimport {EventActive} from \"./component/EventActive\";\nimport {OtherEvent} from \"./component/OtherEvent\";\n\nexport const Home = () => {\n    const userDetail = JSON.parse(localStorage.getItem('userDetail'));\n    return (\n        <div className={'home-protected'}>\n            <TitleComponent title={`Welcome, ${userDetail.username}`}/>\n            <EventActive/>\n            <OtherEvent/>\n        </div>\n    )\n}\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {useDispatch} from \"react-redux\";\nimport React, {useEffect} from \"react\";\nimport {setPageTitle} from \"../../features/common/headerSlice\";\nimport {Home} from \"../../features/member-page/home\";\nimport {Container} from \"@mui/material\";\n\nconst InternalPage = () => {\n\n    const title = \"Home Page Member\";\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setPageTitle({title: title}))\n        document.title = title;\n    }, [dispatch])\n    return (\n        <Container>\n            <Home/>\n        </Container>\n    )\n}\nexport default InternalPage;\n","/*\n * Copyright (c) 2023-2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport moment from 'moment';\nimport 'moment/locale/id';\nimport { format } from 'date-fns';\nimport momentTimezone from 'moment-timezone';\n\nexport function convertLongDateToIndo(epochTime) {\n  return moment(epochTime).locale('id').format('dddd, DD MMMM YYYY');\n}\n\nexport function convertEpochMomentToIndo(epochTime) {\n  return moment.unix(epochTime).format(\"D MMMM YYYY [pukul] HH.mm\");\n}\n\nexport function convertEpochToIndo(epochTime) {\n  return format(new Date(epochTime * 1000), 'dd-MM-yyyy');\n}\n\nexport function indonesianTime(time) {\n  return momentTimezone.utc(time, 'HHmm').tz('Asia/Jakarta').format('HH:mm');\n}\n\nexport const formatDateToIndonesian = (dateString) => {\n  const options = { year: 'numeric', month: 'long', day: 'numeric' };\n  const date = new Date(dateString);\n  return date.toLocaleDateString('id-ID', options);\n};\n\nexport function indonesianDate(data: any) {\n  return moment(data).locale('id').format('dddd, DD MMMM YYYY');\n}\n"],"names":["fetchAllEventAction","requestParam","async","dispatch","type","REQUEST_GET_EVENT_LIST","data","status","apiBaseUrl","method","params","categoryEventId","page","size","headers","url","result","REQUEST_GET_EVENT_LIST_FAILURE","getResponseError","responseData","message","REQUEST_GET_EVENT_LIST_SUCCESS","payload","error","getError","fetchDetailEventAction","id","REQUEST_DETAIL_EVENT","REQUEST_DETAIL_EVENT_FAILURE","REQUEST_DETAIL_EVENT_SUCCESS","fetchEventActive","REQUEST_EVENT_ACTIVE","code","REQUEST_EVENT_ACTIVE_SUCCESS","REQUEST_EVENT_ACTIVE_FAILED","fetchRegistrationEvent","REQUEST_REGISTRATION_EVENT","formData","FormData","append","email","riderName","nickname","noStart","parentName","noTelp","masterCategoryRaceId","eventId","community","dob","filePayment","REQUEST_REGISTRATION_EVENT_SUCCESS","REQUEST_REGISTRATION_EVENT_FAILURE","src","loadingText","alt","width","title","className","image","name","date","price","navigate","useNavigate","token","checkAuth","userDetail","JSON","parse","localStorage","getItem","noImage","convertLongDateToIndo","onClick","scope","handleClick","EventActive","useDispatch","isLoading","useSelector","eventActiveState","eventActive","setPage","useState","useEffect","Loading","map","item","BannerEvent","Pagination","count","metaData","totalPage","color","onChange","event","value","OtherEvent","comingSoon","Home","TitleComponent","username","setPageTitle","document","Container","epochTime","moment","locale","format","formatDateToIndonesian","dateString","Date","toLocaleDateString","year","month","day","indonesianDate"],"sourceRoot":""}