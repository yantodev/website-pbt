{"version":3,"file":"static/js/1567.f1563e1e.chunk.js","mappings":"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","sources":["app/service/action/public/event/eventAction.js","components/Loading/Loading.jsx","features/homepage/event-detail/index.jsx","pages/member/EventDetail.jsx"],"sourcesContent":["/*\n * Copyright (c) 2023-2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {apiBaseUrl} from \"../../../apiBaseUrl\";\nimport {getError, getResponseError} from '../../../helper/handlingError';\nimport {\n    REQUEST_DETAIL_EVENT,\n    REQUEST_DETAIL_EVENT_FAILURE,\n    REQUEST_DETAIL_EVENT_SUCCESS,\n    REQUEST_EVENT_ACTIVE,\n    REQUEST_EVENT_ACTIVE_FAILED,\n    REQUEST_EVENT_ACTIVE_SUCCESS,\n    REQUEST_GET_EVENT_LIST,\n    REQUEST_GET_EVENT_LIST_FAILURE,\n    REQUEST_GET_EVENT_LIST_SUCCESS,\n    REQUEST_REGISTRATION_EVENT,\n    REQUEST_REGISTRATION_EVENT_FAILURE,\n    REQUEST_REGISTRATION_EVENT_SUCCESS\n} from \"../../../constant/EventConstant\";\n\nexport const fetchAllEventAction = (requestParam) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_GET_EVENT_LIST,\n        });\n        try {\n            const {data, status} = await apiBaseUrl({\n                method: 'GET',\n                params: {\n                    status: requestParam.status,\n                    categoryEventId: requestParam.categoryEventId,\n                    page: requestParam.page,\n                    size: requestParam.size,\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: {},\n                url: `/public/api/v2/event`,\n            });\n\n            if (data.result == null) {\n                dispatch({\n                    type: REQUEST_GET_EVENT_LIST_FAILURE,\n                });\n                return getResponseError(data.responseData.message);\n            }\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_GET_EVENT_LIST_SUCCESS,\n                    payload: data,\n                });\n                return data.result;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_GET_EVENT_LIST_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n};\n\nexport const fetchDetailEventAction = (id: number) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_DETAIL_EVENT,\n        });\n        try {\n            const { data, status } = await apiBaseUrl({\n                method: 'GET',\n                params: {},\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: {},\n                url: `/public/api/v2/event/${id}`,\n            });\n\n            if (data.result == null) {\n                dispatch({\n                    type: REQUEST_DETAIL_EVENT_FAILURE,\n                });\n                return getResponseError(data.responseData.message);\n            }\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_DETAIL_EVENT_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_DETAIL_EVENT_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n};\n\n\nexport const fetchEventActive = (page: number) => {\n    return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_EVENT_ACTIVE,\n        });\n        try {\n            const { data, status } = await apiBaseUrl({\n                method: 'GET',\n                params: {\n                    page,\n                    size: 1\n                },\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                url: '/public/api/v2/event/active',\n                data: {}\n            });\n\n            if (data.responseData.code === 204) {\n                dispatch({\n                    type: REQUEST_EVENT_ACTIVE_SUCCESS,\n                    payload: data.responseData.code,\n                });\n                return [];\n            }\n\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_EVENT_ACTIVE_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_EVENT_ACTIVE_FAILED,\n            });\n            await getError(error);\n        }\n    };\n};\nexport const fetchRegistrationEvent = (requestParam) => {\n        return async (dispatch: any) => {\n        dispatch({\n            type: REQUEST_REGISTRATION_EVENT,\n        });\n        try {\n            const formData = new FormData();\n            formData.append('email', requestParam.email);\n            formData.append('riderName', requestParam.riderName);\n            formData.append('nickname', requestParam.nickname);\n            formData.append('noStart', requestParam.noStart);\n            formData.append('parentName', requestParam.parentName);\n            formData.append('noTelp', requestParam.noTelp);\n            formData.append('masterCategoryRaceId', requestParam.masterCategoryRaceId);\n            formData.append('eventId', requestParam.eventId);\n            formData.append('community', requestParam.community);\n            formData.append('dob', requestParam.dob);\n            formData.append('filePayment', requestParam.filePayment);\n\n            const { data, status } = await apiBaseUrl({\n                method: 'POST',\n                data: formData,\n                headers: {\n                    'Content-Type': 'application/form-data',\n                },\n                url: `/public/api/v2/event/registration/add`,\n            });\n            if (status === 200) {\n                dispatch({\n                    type: REQUEST_REGISTRATION_EVENT_SUCCESS,\n                    payload: data,\n                });\n                return data;\n            }\n        } catch (error) {\n            dispatch({\n                type: REQUEST_REGISTRATION_EVENT_FAILURE,\n            });\n            await getError(error);\n        }\n    };\n}\n// export const fetchGetEventListAction = (requestParam: any) => {\n//     return async (dispatch: any) => {\n//         dispatch({\n//             type: REQUEST_GET_EVENT_LIST,\n//         });\n//         try {\n//             const token = validationSession.getToken();\n//             const { data, status } = await apiBaseUrl({\n//                 method: 'GET',\n//                 params: {\n//                     size: requestParam.size,\n//                     page: requestParam.page,\n//                     status: requestParam.status,\n//                     category_event_id: requestParam.category_event_id,\n//                     search: requestParam.search,\n//                 },\n//                 headers: {\n//                     'Content-type': 'application/json',\n//                     Authorization: `Bearer ${token}`,\n//                 },\n//                 url: `/api/v2/event`,\n//                 data: requestParam\n//             });\n//             if (status === 200) {\n//                 dispatch({\n//                     type: REQUEST_GET_EVENT_LIST_SUCCESS,\n//                     payload: data,\n//                 });\n//                 return data;\n//             }\n//         } catch (error) {\n//             dispatch({\n//                 type: REQUEST_GET_EVENT_LIST_FAILED,\n//             });\n//             await getError(error);\n//         }\n//     };\n// }\n","/*\n * Copyright (c) 2023. Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport React from \"react\";\nimport loadingText from \"../../assets/image/loading.gif\";\nimport './Loading.css'\n\nconst Loading = () => {\n    return (\n        <div id={'loading'}>\n            <img src={loadingText} alt=\"loading\" width={100} />\n        </div>\n    )\n}\n\nexport default Loading;\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {useEffect} from \"react\";\nimport {useNavigate} from \"react-router-dom\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport checkAuth from \"../../../app/auth\";\nimport Container from \"@mui/material/Container\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport noImage from \"../../../assets/image/No-Image-Placeholder.svg.webp\"\nimport parse from \"html-react-parser\";\nimport {fetchDetailEventAction} from \"../../../app/service/action/public/event/eventAction\";\n\nexport const EventDetail = ({id}) => {\n    const navigate = useNavigate()\n    const dispatch: any = useDispatch();\n    const token = checkAuth();\n\n    const {data, isLoading} = useSelector(({eventDetailState}) => eventDetailState.eventDetail);\n\n    useEffect(() => {\n        // @ts-ignore\n        dispatch(fetchDetailEventAction(id));\n    }, [dispatch, id]);\n\n    const handleRegistration = (detailData) => {\n        if (detailData.categoryEventId === 2) {\n            window.location.href = `https://event.puhsbiketangerang.com/${detailData.id}`\n        }\n        if (token) {\n            navigate(`/member/event/registration/${detailData.id}`, {state: detailData})\n        } else {\n            navigate(`/event/registration/${detailData.id}`, {state: detailData})\n        }\n    }\n    return (\n        <Container>\n            {isLoading ? (\n                <Loading/>\n            ) : (\n                <div className={'detail-event'}>\n                    <div className=\"title\">\n                        {data.result.name}\n                    </div>\n                    <div className={'image'}>\n                        {data.result.image ? (\n                            <img src={data.result.image} alt=\"\"/>\n                        ) : (\n                            <img src={noImage} alt=\"\"/>\n                        )}\n                    </div>\n                    <div className=\"note\">\n                        {parse(data.result.note)}\n                    </div>\n                    <div className={'button'}>\n                        <button onClick={() => handleRegistration(data.result)}>\n                            JOIN NOW\n                        </button>\n                    </div>\n                </div>\n            )}\n        </Container>\n    )\n}\n","/*\n * Copyright (c) 2024.  Yantodev - All Rights Reserved.\n * @Author  :  yantodev\n * mailto : ekocahyanto007@gmail.com\n * link : https://yantodev.github.io/\n */\n\nimport {useDispatch} from \"react-redux\";\nimport {useParams} from \"react-router-dom\";\nimport React, {useEffect} from \"react\";\nimport {setPageTitle} from \"../../features/common/headerSlice\";\nimport {EventDetail} from \"../../features/homepage/event-detail\";\n\nconst InternalPage = () => {\n    const dispatch = useDispatch()\n    const {id} = useParams();\n    useEffect(() => {\n        dispatch(setPageTitle({title: \"Event Detail\"}))\n        document.title = \"Event Detail\";\n    }, [dispatch])\n\n    return <EventDetail id={id}/>\n}\n\nexport default InternalPage;\n"],"names":["fetchAllEventAction","requestParam","async","dispatch","type","REQUEST_GET_EVENT_LIST","data","status","apiBaseUrl","method","params","categoryEventId","page","size","headers","url","result","REQUEST_GET_EVENT_LIST_FAILURE","getResponseError","responseData","message","REQUEST_GET_EVENT_LIST_SUCCESS","payload","error","getError","fetchDetailEventAction","id","REQUEST_DETAIL_EVENT","REQUEST_DETAIL_EVENT_FAILURE","REQUEST_DETAIL_EVENT_SUCCESS","fetchEventActive","REQUEST_EVENT_ACTIVE","code","REQUEST_EVENT_ACTIVE_SUCCESS","REQUEST_EVENT_ACTIVE_FAILED","fetchRegistrationEvent","REQUEST_REGISTRATION_EVENT","formData","FormData","append","email","riderName","nickname","noStart","parentName","noTelp","masterCategoryRaceId","eventId","community","dob","filePayment","REQUEST_REGISTRATION_EVENT_SUCCESS","REQUEST_REGISTRATION_EVENT_FAILURE","src","loadingText","alt","width","EventDetail","navigate","useNavigate","useDispatch","token","checkAuth","isLoading","useSelector","eventDetailState","eventDetail","useEffect","className","name","image","noImage","parse","note","onClick","handleRegistration","detailData","window","location","href","state","useParams","setPageTitle","title","document"],"sourceRoot":""}